Topic: Web development on Fedora Core 5 with Eclipse, CVS, and PHPEclipse
Date: 2006-09-06

Purpose of this article:        To provide a platform that will allow any upcoming web developer (or any developer for that matter) collaborate/create web applications without going through the hassle of using the CLI to get a project started and maintained by several users.        Requirements:          Fedora Core 5 (x86 and x86_64 have been tested)           Ecliipse IDE           PHPEclipse           CVS           Installing the software:     (Fedora Core 5) -- Just put the cd/dvd in and follow the on screen instructions :). Only note here is to give yourself enough room to store your projects.     (Eclipse IDE) -- No special repositories required, type the following as root in a terminal :  # yum install eclipse    Please keep the terminal opened under user root once this software is installed as you will need it for the next steps.     (PHPEclipse) -- Type the following as root to start eclipse as root :  # eclipse &    Once eclipse is opened navigate to Help &gt;&gt; Software Updates &gt;&gt; Find and Install. This will bring you to an "Install/Update " dialog and you will want to select "Search for new features to install" as shown below: In the next figure you'll want to add a "New remote site" and fill in the proper values for the PHPEclipse update site.Now the next screens should be self explanatory, just keep clicking next and make sure PHPEclipse is highlighted and you've completed with "Install All" button.  (CVS) -- Now that you've installed your IDE (Eclipse) and the proper plugin to actually work effectively on the type of content you've chosen (in this case PHP) we need to setup a repository for you and your developers to work in harmony. Now I know I said "web developing without the use of CLI" but what I really meant was "developing without the use of CLI after configuring the tools to do so". So if you're still with me lets continue through the most difficult part of this whole setup. In cvs you have a couple of things to look at : One directory from which each developer will retrieve and contribute to codeA versioning system that keeps tracks of changes/creations and allows you to back out of any problematic code that may introduce itself over the course of the developmentThe ability to group your developers into one group that will allow for easy administration of those who can/cannot access your development environment. Creating the CVS environment for your users to work from :These steps are to be performed as root in a terminal window. They are also what I usually do when starting off a cvs repository, you may modify any parts of these as you see fit. Create the cvsuser account and home directory where all the official code will be kept. # useradd cvsuser Create a user that will be accessing the cvs repository and also adding them to the proper cvsuser group. # useradd adam; passwd adam# usermod -G cvsuser adamAdd a global CVS variable for use by any user on the system, or you may provide the variable to only a group of users by placing it in ~/.bash_profile # echo "export CVSROOT=/home/cvsuser" &gt;&gt; /etc/profileYou may test this by logging in as a particular user and echoing the CVS variable. # su - adam[adam@localhost]$ source /etc/profile[adam@localhost ~]$ echo $CVShome/cvsuser[adam@localhost ~]$ exit Initialize the cvsroot # su - cvsuser# cvs init I am going to assume you have some code already that you would like to import, in my case I've been working on a theme for drupal called "theef" (pronounced "the - f?") and it is located under my home directory in /home/adam/theef. Now we import our code into the CVS repository. [adam@localhost ~/theef]$ cvs import theef adam R1The above basically says import my project theef with the tag adam with a release of R1.  This will put your project under /home/cvsuser/theef and if you are going to be accessing the CVS repository locally then you'll need to remove the existing /home/adam/theef and checkout the project from CVS. But we won't worry about that for now as we are working remotely with Eclipse and it does it all for you  Ok, so we've got the CVS repository setup giving access to user 'adam' and a project imported (hopefully) now it's time to go back into Eclipse and setup a project. (Importing CVS project with Eclipse) -- You should have Eclipsed opened up and ready to import a project via CVS. To do so you'll need to navigate to  File &gt;&gt; New &gt;&gt; Project &gt;&gt; Checkout project from CVS as shown below: At the next dialog screen make sure "Create a new repository location" is selected. The next dialog window will bring you to the CVS Repository location information. In our case we won't be using 'pserver' so setup is pretty straight forward as long as you have OpenSSH enabled on your CVS server. On your next screen you are given the option to define the module you wish to checkout or see a list, now my figure will show a few more than what yours should list because I'm writing this against a production CVS box. In any case you may wish to just type the module in yourself 'theef'. In the next dialog you'll want to checkout the as the project within the workspace : You'll be presented with a couple more dialog boxes just accept the defaults and when you come up to "Select Tag" hilight "HEAD"  and click finish button. (Conclusion) -- Finally your setup is complete and you have the ability to work within an IDE that provides you all the needed abilities for code syntax hilighting, code completion, snippets, and of course cvs capability.  Once you've gone through done some updates etc, right click on the directory and/or file that you've been editing and goto Team &gt;&gt; Commit and this will walk you through committing your work back to CVS. (From the author) So I wrote this while watching the Carolina Hurricanes win the Stanley cup so I've had a few distractions. I'll keep updating this page as I find errors, but please feel free to post your comments/suggestions that you would like to see here. I hope this article is in its simplest form for users wanting to develop with Eclipse. Some other great plugins I've come across to use with Eclipse are :  Pydev (python developtment) http://pydev.sf.netEPIC (ecplise perl integration) http://e-p-i-c.sf.net/



inetsolution

Its highly informative.  I would be visiting your blog hereafter regularly to gather valuable information.Logo Design Chennai


Levi

Thanks for this blog post! I'm wondering though, how does PHPEclipse's CVS support compare to PDT's (the 'official' PHP framework for Eclipse)?


